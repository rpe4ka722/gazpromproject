# Generated by Django 4.0.3 on 2022-10-30 18:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uchastok', models.CharField(choices=[('Участок связи при заполярной промплощадке', 'Участок связи при заполярной промплощадке'), ('Участок связи №1', 'Участок связи №1'), ('Участок связи №2', 'Участок связи №2'), ('Участок связи №3', 'Участок связи №3'), ('Участок связи №4', 'Участок связи №4'), ('Участок связи №5', 'Участок связи №5'), ('Участок связи №6', 'Участок связи №6'), ('Участок связи №7', 'Участок связи №7'), ('Участок связи №8', 'Участок связи №8'), ('Участок связи №9', 'Участок связи №9'), ('Участок связи №10', 'Участок связи №10'), ('Участок связи №11', 'Участок связи №11'), ('Участок связи №12', 'Участок связи №12'), ('Участок связи №13', 'Участок связи №13'), ('Участок связи №14', 'Участок связи №14'), ('Участок связи №15', 'Участок связи №15'), ('Участок связи №16', 'Участок связи №16'), ('Участок связи №17', 'Участок связи №17'), ('Участок связи №18', 'Участок связи №18'), ('Участок связи №19', 'Участок связи №19'), ('Участок связи №20', 'Участок связи №20')], max_length=50, verbose_name='участок связи')),
                ('ceh', models.CharField(blank=True, choices=[('Ноябрьский цех связи', 'НЦС'), ('Сургутский цех связи', 'СЦС'), ('Тюменский цех связи', 'ТЦС'), ('', '')], max_length=30, verbose_name='цех')),
            ],
            options={
                'ordering': ['ceh', 'uchastok'],
            },
        ),
        migrations.CreateModel(
            name='Header',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_name', models.CharField(max_length=30, unique=True, verbose_name='наименование станции')),
                ('time_modify', models.DateTimeField(auto_now=True)),
                ('last_modify', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude_degrees', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, message='Значение не может быть отрицательным'), django.core.validators.MaxValueValidator(100, message='Значение не может быть больше 100')], verbose_name='°')),
                ('latitude_minutes', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, message='Значение не может быть отрицательным'), django.core.validators.MaxValueValidator(100, message='Значение не может быть больше 100')], verbose_name="'")),
                ('latitude_seconds', models.FloatField(validators=[django.core.validators.MinValueValidator(0, message='Значение не может быть отрицательным'), django.core.validators.MaxValueValidator(100, message='Значение не может быть больше 100')], verbose_name='"')),
                ('longitude_degrees', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, message='Значение не может быть отрицательным'), django.core.validators.MaxValueValidator(100, message='Значение не может быть больше 100')], verbose_name='°')),
                ('longitude_minutes', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, message='Значение не может быть отрицательным'), django.core.validators.MaxValueValidator(100, message='Значение не может быть больше 100')], verbose_name="'")),
                ('longitude_seconds', models.FloatField(validators=[django.core.validators.MinValueValidator(0, message='Значение не может быть отрицательным'), django.core.validators.MaxValueValidator(100, message='Значение не может быть больше 100')], verbose_name='"')),
                ('address', models.CharField(blank=True, max_length=50, null=True, verbose_name='адрес')),
                ('district', models.CharField(blank=True, max_length=30, null=True, verbose_name='район')),
            ],
        ),
        migrations.CreateModel(
            name='RrlLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rrl_line_name', models.CharField(max_length=50, verbose_name='наименование линии')),
                ('station_count', models.IntegerField(blank=True, null=True, verbose_name='количество станций')),
                ('bandwidth', models.CharField(blank=True, max_length=20, null=True, verbose_name='полоса пропускания')),
            ],
        ),
        migrations.CreateModel(
            name='Sheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sheet_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UploadedData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='temp/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['xls', 'xlsx'], message='Тип файла выбран неверно. Выберите файл таблицы excel.')])),
            ],
        ),
        migrations.CreateModel(
            name='Ozp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zamechanie_ozp', models.TextField(max_length=500)),
                ('normative_documentation', models.CharField(blank=True, max_length=100, null=True)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('control_date', models.DateField(blank=True, null=True)),
                ('zakrytie_date', models.DateField(blank=True, null=True)),
                ('do_foto', models.ImageField(upload_to='img/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['.png', '.jpg', '.jpeg', '.tiff', '.bmp', '.gif'], message='Тип файла выбран неверно. Выберите файл изображения.')])),
                ('posle_foto', models.ImageField(blank=True, null=True, upload_to='img/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['.png', '.jpg', '.jpeg', '.tiff', '.bmp', '.gif'], message='Тип файла выбран неверно. Выберите файл изображения.')])),
                ('time_modify', models.DateTimeField(auto_now=True)),
                ('is_done', models.BooleanField(default=False)),
                ('last_modify', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('object_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.object')),
            ],
        ),
        migrations.AddField(
            model_name='object',
            name='position',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='main.position', verbose_name='Место расположения станции'),
        ),
        migrations.AddField(
            model_name='object',
            name='rrl_line',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.rrlline', verbose_name='наименование линии'),
        ),
        migrations.AddField(
            model_name='object',
            name='uchastok',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.department', verbose_name='участок связи'),
        ),
        migrations.CreateModel(
            name='Foto_zamechanya',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.ImageField(upload_to='img/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['.png', '.jpg', '.jpeg', '.tiff', '.bmp', '.gif'], message='Тип файла выбран неверно. Выберите файл изображения.')])),
                ('zamechanie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.ozp')),
            ],
        ),
        migrations.CreateModel(
            name='Foto_vipolnenya',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.ImageField(upload_to='img/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['.png', '.jpg', '.jpeg', '.tiff', '.bmp', '.gif'], message='Тип файла выбран неверно. Выберите файл изображения.')])),
                ('zamechanie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.ozp')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_name', models.CharField(max_length=30, verbose_name='имя')),
                ('employee_last_name', models.CharField(max_length=30, verbose_name='фамилия')),
                ('uchastok_instance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.department')),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, message='Значение не может быть меньше единицы')], verbose_name='Для импорта выберите номер строки с заголовками таблицы')),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='address', to='main.header', verbose_name='Выберите источник данных для адресов объектов')),
                ('coords_lat', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='latitude', to='main.header', verbose_name='Выберите источник данных для широты')),
                ('coords_lon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='longitude', to='main.header', verbose_name='Выберите источник данных для долготы')),
                ('district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='district', to='main.header', verbose_name='Выберите источник данных для указания района')),
                ('object_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='object_name', to='main.header', verbose_name='Выберите источник данных для названий объектов')),
                ('sheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sheet', to='main.sheet', verbose_name='Выберите вкладку для импорта')),
            ],
        ),
    ]
