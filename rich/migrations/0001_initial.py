# Generated by Django 4.0.3 on 2023-01-07 09:38

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main', '0010_alter_podano_na_vipolnenie_otklonit_comment'),
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('РРЛ', 'РРЛ'), ('БС конвенциональной связи', 'БС конвенциональной связи'), ('БС транкинговой связи', 'БС транкинговой связи'), ('БС', 'БС'), ('РЭС морской подвижной службы', 'РЭС морской подвижной службы'), ('РЭС сухопутной подвижной службы', 'РЭС сухопутной подвижной службы'), ('Судовые РЭС', 'Судовые РЭС'), ('АС', 'АС')], max_length=50, verbose_name='класс РЭС')),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('doc', models.FileField(upload_to='files/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpeg', 'tiff', 'bmp', 'gif', 'pdf', 'doc', 'docx'], message='Тип файла выбран неверно.')])),
            ],
        ),
        migrations.CreateModel(
            name='Res',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Наименование')),
                ('radio_class', models.CharField(blank=True, max_length=20, null=True, verbose_name='Введите класс излучения')),
                ('antenna_height', models.IntegerField(blank=True, null=True, verbose_name='Укажите высоту установки антенны')),
                ('azimuth_value', models.IntegerField(blank=True, null=True, verbose_name='Укажите азимут антенны')),
                ('antenna_gain', models.IntegerField(blank=True, null=True, verbose_name='Укажите коэффициент усиления антенны')),
                ('polarization', models.CharField(blank=True, choices=[('Вертикальная', 'Вертикальная'), ('Горизонтальная', 'Горизонтальная'), ('Круговая', 'Круговая')], max_length=20, null=True, verbose_name='Выберите поляризацию')),
                ('is_active', models.BooleanField(default=False, verbose_name='Выберите если РЭС в работе')),
                ('related_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='res', to='main.object', verbose_name='Укажите объект установки')),
                ('related_registration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rich.registration', verbose_name='Выберите регистрацию')),
            ],
        ),
        migrations.CreateModel(
            name='Rich',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Наименование')),
                ('start_date', models.DateField(verbose_name='Дата начала действия РИЧ')),
                ('end_date', models.DateField(verbose_name='Дата окончания действия РИЧ')),
                ('doc', models.FileField(upload_to='files/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpeg', 'tiff', 'bmp', 'gif', 'pdf', 'doc', 'docx'], message='Тип файла выбран неверно.')], verbose_name='Копия разрешения')),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('manufacter', models.CharField(blank=True, max_length=50, null=True)),
                ('fs_form', models.FileField(upload_to='files/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['.png', '.jpeg', '.tiff', '.bmp', '.gif', '.pdf', '.doc', '.docx'], message='Тип файла выбран неверно.')])),
                ('frequency_range_min', models.FloatField()),
                ('frequency_range_max', models.FloatField()),
                ('class_res', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='class_res', to='rich.class')),
            ],
        ),
        migrations.CreateModel(
            name='Transmitter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.IntegerField(blank=True, null=True)),
                ('power', models.IntegerField(blank=True, null=True)),
                ('transmit_frequency', models.IntegerField(blank=True, null=True)),
                ('recieve_frequency', models.IntegerField(blank=True, null=True)),
                ('related_res', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transmitter', to='rich.res')),
            ],
        ),
        migrations.AddField(
            model_name='res',
            name='related_rich',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rich.rich', verbose_name='Выберите РИЧ'),
        ),
    ]
